import random
import time

def primes(n):
    j = 1
    while (j < 6):
        a = random.randint (0, n - 1)
        if pow(a, (n - 1), n) == 1:
            j += 1
        elif pow(a, (n - 1), n) != 1:
            return False
        if j == 5:
            return True

result = {}
def sq_cub_rev_prime(n):
    a = time.time()
    i = 89
    k = 1
    if n not in result:
        while len(result) < n :
            if primes(int(str(pow(i,2))[::-1])) == True and primes(int(str(pow(i,3))[::-1])) == True:
                result[k] = i
                k += 1
            i += 1
        b = time.time()
        print(b - a)
    return result[n]
